{"version":3,"sources":["assets/images/perfil.jpg","assets/images/br.svg","assets/images/australia.svg","i18n.js","containers/layout/DefaultLayout.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","i18n","use","Backend","LanguageDetector","initReactI18next","init","lng","backend","loadPath","fallbackLng","ns","defaultNS","keySeparator","interpolation","escapeValue","formatSeparator","react","wait","DefaultLayout","props","useState","isOpen","setIsOpen","activeNavitem","setActiveNavitem","prevScrollY","useRef","goingUp","setGoingUp","useTranslation","t","changeLanguage","language","useEffect","scrollHandler","event","currentScrollY","window","scrollY","current","sections","document","querySelectorAll","sectionID","forEach","section","pageYOffset","offsetTop","offsetHeight","id","addEventListener","removeEventListener","isActive","className","Navbar","color","light","expand","fixed","NavbarBrand","href","rel","target","aria-hidden","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","active","NavLink","src","brFlag","alt","width","height","ausFlag","avatar","Container","Form","action","method","name","noValidate","FormGroup","Label","Input","required","type","placeholder","Button","App","fallback","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d6cac146.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/perfil.49dcdfd1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/br.a102e563.svg\";","module.exports = __webpack_public_path__ + \"static/media/australia.cab2eac6.svg\";","import i18n from \"i18next\";\nimport Backend from \"i18next-xhr-backend\";\nimport { initReactI18next } from \"react-i18next\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\n\ni18n\n    .use(Backend)\n    .use(LanguageDetector)\n    .use(initReactI18next)\n    .init({\n        lng: \"en\",\n\n        backend: {\n            /* translation file path */\n            //   loadPath: \"/assets/i18n/{{ns}}/{{lng}}.json\"\n            loadPath: \"/locales/{{ns}}/{{lng}}.json\"\n        },\n        fallbackLng: \"br\",\n        // debug: true,\n        /* can have multiple namespace, in case you want to divide a huge translation into smaller pieces and load them on demand */\n        ns: [\"translations\"],\n        defaultNS: \"translations\",\n        keySeparator: false,\n        interpolation: {\n            escapeValue: false,\n            formatSeparator: \",\"\n        },\n        react: {\n            wait: true\n        }\n    });\n\nexport default i18n;\n","// https://medium.com/@cgroom/a-software-engineers-one-page-portfolio-4f85ab8a20d1\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Container, Form, FormGroup, Input, Label, Button } from 'reactstrap';\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n} from \"reactstrap\";\nimport avatar from \"../../assets/images/perfil.jpg\";\nimport brFlag from \"../../assets/images/br.svg\";\nimport ausFlag from \"../../assets/images/australia.svg\";\n\nconst DefaultLayout = props => {\n\n    const [isOpen, setIsOpen] = useState(false);\n    const [activeNavitem, setActiveNavitem] = useState(\"\");\n    const prevScrollY = useRef(0);\n\n    const [goingUp, setGoingUp] = useState(true);\n\n    const { t, i18n } = useTranslation();\n\n    const toggle = () => setIsOpen(!isOpen);\n\n    const changeLanguage = language => {\n        i18n.changeLanguage(language);\n    };\n\n\n    useEffect(() => {\n        const scrollHandler = event => {\n            const currentScrollY = window.scrollY;\n\n            if (prevScrollY.current < currentScrollY && goingUp) {\n                setGoingUp(false);\n            }\n            if (prevScrollY.current > currentScrollY && !goingUp) {\n                setGoingUp(true);\n            }\n\n            const sections = document.querySelectorAll(\".custom-section\");\n            let sectionID = \"\"\n            sections.forEach(section => {\n                if (window.pageYOffset >= section.offsetTop - 100 &&\n                    window.pageYOffset <= section.offsetTop + section.offsetHeight - 100) {\n                    sectionID = section.id\n                }\n            });\n            setActiveNavitem(sectionID)\n            prevScrollY.current = currentScrollY;\n        };\n        window.addEventListener(\"scroll\", scrollHandler, true);\n        return () => {\n            window.removeEventListener(\"scroll\", scrollHandler, true);\n        };\n    }, [props, t, goingUp, activeNavitem]);\n\n    const isActive = (sectionID) => {\n        return activeNavitem === sectionID;\n    }\n\n    return (\n        <div className=\"app\">\n            <div className={\"botta-navbar \" + (goingUp ? \"show\" : \"hide\")}>\n                <Navbar color=\"light\" light expand=\"md\" fixed={\"top\"}>\n                    <NavbarBrand>\n                        <div className=\"botta-navbar-brand\">\n\n                            Andre Botta\n\n                        </div>\n                    </NavbarBrand>\n                    <div className=\"botta-brand-social\">\n                        <a href=\"https://github.com/alcbotta\" className=\"default-icon-size\"\n                            rel=\"noopener noreferrer\" target=\"_blank\">\n                            <i className=\"fa fa-github fa-lg\" aria-hidden=\"true\"></i>\n                        </a>\n                        <a href=\"https://medium.com/@alcbotta\" className=\"default-icon-size\"\n                            rel=\"noopener noreferrer\" target=\"_blank\">\n                            <i className=\"fa fa-medium fa-lg\" aria-hidden=\"true\"></i>\n                        </a>\n                        <a href=\"https://www.linkedin.com/in/andrebotta/\" className=\"default-icon-size\"\n                            rel=\"noopener noreferrer\" target=\"_blank\">\n                            <i className=\"fa fa-linkedin fa-lg\" aria-hidden=\"true\"></i>\n                        </a>\n                    </div>\n                    <NavbarToggler onClick={toggle} />\n                    <Collapse isOpen={isOpen} navbar>\n                        <Nav className=\"ml-auto\" navbar>\n\n                            <NavItem active={isActive(\"about\")}>\n                                <NavLink href=\"#about\">{t(\"navbar.aboutme\")}</NavLink>\n                            </NavItem>\n                            <NavItem active={isActive(\"interests\")}>\n                                <NavLink href=\"#interests\">{t(\"navbar.projects\")}</NavLink>\n                            </NavItem>\n\n                            <NavItem active={isActive(\"contact\")}>\n                                <NavLink href=\"#contact\">{t(\"navbar.contactme\")}</NavLink>\n                            </NavItem>\n\n\n                            <NavItem>\n                                <NavLink onClick={() => changeLanguage(\"br\")}>\n                                    <img\n                                        className=\"dlogo\"\n                                        src={brFlag}\n                                        alt={\"logo\"}\n                                        width={30}\n                                        height={30}\n                                    />\n                                </NavLink>\n                            </NavItem>\n\n                            <NavItem>\n                                <NavLink onClick={() => changeLanguage(\"en\")}>\n                                    <img\n                                        className=\"dlogo\"\n                                        src={ausFlag}\n                                        alt={\"logo\"}\n                                        width={30}\n                                        height={30}\n                                    />\n                                </NavLink>\n                            </NavItem>\n                        </Nav>\n                    </Collapse>\n                </Navbar>\n            </div>\n            <section className=\"main-section\">\n                <img src={avatar} alt=\"Avatar\" className=\"avatar-img\" />\n                <h2>Andre Luiz Costantino Botta</h2>\n                <h4>{t(\"avatar.jobTitle\")}</h4>\n            </section>\n            <section\n                className=\"custom-section\"\n                id=\"about\">\n                <div className=\"title\">\n                    <h2>{t(\"section.about.title\")}</h2>\n                    <div className=\"spacer2\">  <br /></div>\n                </div>\n                <div className=\"body\">\n                    <div className=\"left\">\n                        <div>{t(\"section.about.p1\")}</div>\n                        <div>{t(\"section.about.p2\")}</div>\n                    </div>\n                    <div className=\"right\">\n                        <h4>{t(\"section.highlights\")}</h4>\n                        <div>{t(\"section.highlights.p1\")}</div>\n                    </div>\n                </div>\n            </section>\n\n            <section className=\"custom-section\" id=\"interests\">\n                <div className=\"title\">\n                    <h2>{t(\"section.interests\")}</h2>\n                    <div className=\"spacer2\">  <br /></div>\n                </div>\n                <div className=\"body\">\n                    <div className=\"left\">\n                        <ul>\n                            <li><strong>Machine Learning:</strong>{t(\"section.interests.p1\")}</li>\n                            <li><strong>IoT:</strong>{t(\"section.interests.p2\")}</li>\n                        </ul>\n                    </div>\n                    <div className=\"right\">\n                        <h3>{t(\"section.other\")}</h3>\n                        <li>{t(\"section.other.p1\")}</li>\n                        <li>{t(\"section.other.p2.1\") + \" \"}<a href=\"https://medium.com/@alcbotta\" className=\"default-icon-size\"\n                            rel=\"noopener noreferrer\" target=\"_blank\">\n                            Medium\n                        </a>{t(\"section.other.p2.2\")}</li>\n\n                    </div>\n                </div>\n\n            </section>\n\n            <section className=\"custom-section\" id=\"contact\">\n                <div className=\"container\">\n                    <div className=\"title\">\n                        <h2>{t(\"contact\")}</h2>\n                    </div>\n                    <div className=\"spacer2\">  <br /></div>\n                    <Container>\n                        <Form action=\"https://formspree.io/alcbotta@gmail.com\" method=\"POST\" name=\"sentMessage\" id=\"contactForm\" noValidate>\n\n                            <FormGroup>\n                                <Label>{t(\"contact.name\")}</Label>\n                                <Input required={true} type=\"text\" name=\"contact-name\" id=\"contact-name\" placeholder={t(\"contact.namePlaceholder\")} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label>{t(\"contact.email\")}</Label>\n                                <Input required type=\"email\" name=\"contact-email\" id=\"contact-email\" placeholder={t(\"contact.emailPlaceholder\")} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label>{t(\"contact.message\")}</Label>\n                                <Input required type=\"textarea\" name=\"contact-message\" id=\"contact-message\" placeholder={t(\"contact.messagePlaceholder\")} />\n                            </FormGroup>\n                            <Button className=\"send-button\">Send</Button>\n\n                        </Form>\n\n                    </Container>\n                </div>\n            </section>\n\n        </div >\n    );\n\n}\n\n\n\nexport default DefaultLayout;\n","import React, { Suspense } from \"react\";\r\nimport DefaultLayout from \"./containers/layout/DefaultLayout\";\r\n\r\nimport './App.css';\r\nfunction App() {\r\n  return (\r\n    <Suspense fallback=\"loading\">\r\n      <DefaultLayout />\r\n    </Suspense>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"./i18n.js\";\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport \"./scss/style.scss\";\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}